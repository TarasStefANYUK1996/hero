{"version":3,"sources":["hooks/http.hook.js","actions/index.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","heroesSort","typeSort","type","payload","HeroesListItem","elementClassName","id","name","heroes","description","element","dispatch","useDispatch","_jsxs","className","children","_jsx","src","alt","style","objectFit","aria-label","onClick","close","Spinner","role","HeroesList","_useSelector","useSelector","state","heroesLoadingStatus","filters","useEffect","then","heroesFetched","catch","elements","renderHeroesList","arr","map","props","_objectWithoutProperties","_objectSpread","HeroesAddForm","_useState","useState","_useState2","_slicedToArray","filter","setFilter","_useState3","text","_useState4","user","setUser","res","filt","index","Object","entries","_ref2","key","value","htmlFor","required","placeholder","onChange","e","target","console","log","height","preventDefault","JSON","stringify","add","HeroesFilters","activeButton","setActiveButton","handleButtonClick","buttonId","classNames","active","App","initialState","reducer","action","sort","hero","heroe","uuidv4","push","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5e643f32.chunk.js","sourcesContent":["import { useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    // const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        // setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            // setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    // const clearError = useCallback(() => {\r\n        // setProcess('loading');\r\n    // }, []);\r\n\r\n    return {request, \r\n            // clearError, \r\n            // process, \r\n            // setProcess\r\n        }\r\n}","export const heroesFetching = () => {\r\n  return {\r\n    type: \"HEROES_FETCHING\",\r\n  };\r\n};\r\n\r\nexport const heroesFetched = (heroes) => {\r\n  return {\r\n    type: \"HEROES_FETCHED\",\r\n    payload: heroes,\r\n  };\r\n};\r\nexport const heroesSort = (typeSort) => {\r\n  return {\r\n    type: \"HEROES_SORT\",\r\n    payload: typeSort,\r\n  };\r\n};\r\n\r\nexport const heroesFetchingError = () => {\r\n  return {\r\n    type: \"HEROES_FETCHING_ERROR\",\r\n  };\r\n};\r\nexport const close = (heroes, id) => {\r\n  return {\r\n    type: \"HEROES_CLOSE\",\r\n    payload: id,\r\n  };\r\n};\r\nexport const add = (user) => {\r\n  return {\r\n    type: \"HEROES_ADD\",\r\n    payload: user,\r\n  };\r\n};\r\n","import { close } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nconst HeroesListItem = ({ id, heroes, name, description, element }) => {\r\n  let elementClassName;\r\n  const dispatch = useDispatch();\r\n\r\n  const { request } = useHttp();\r\n  switch (element) {\r\n    case \"fire\":\r\n      elementClassName = \"bg-danger bg-gradient\";\r\n      break;\r\n    case \"water\":\r\n      elementClassName = \"bg-primary bg-gradient\";\r\n      break;\r\n    case \"wind\":\r\n      elementClassName = \"bg-success bg-gradient\";\r\n      break;\r\n    case \"earth\":\r\n      elementClassName = \"bg-secondary bg-gradient\";\r\n      break;\r\n    default:\r\n      elementClassName = \"bg-warning bg-gradient\";\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\r\n    >\r\n      <img\r\n        src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\r\n        className=\"img-fluid w-25 d-inline\"\r\n        alt=\"unknown hero\"\r\n        style={{ objectFit: \"cover\" }}\r\n      />\r\n      <div className=\"card-body\">\r\n        <h3 className=\"card-title\">{name}</h3>\r\n        <p className=\"card-text\">{description}</p>\r\n      </div>\r\n      <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close btn-close\"\r\n          aria-label=\"Close\"\r\n          onClick={() => {\r\n            dispatch(close(heroes, id));\r\n\r\n            request(\"http://localhost:3001/heroes/\" + id, \"DELETE\");\r\n          }}\r\n        ></button>\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HeroesListItem;\r\n","\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  heroesFetching,\r\n  heroesFetched,\r\n  heroesFetchingError,\r\n} from \"../../actions\";\r\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\n// Задача для этого компонента:\r\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\r\n// Усложненная задача:\r\n// Удаление идет и с json файла при помощи метода DELETE\r\n\r\nconst HeroesList = () => {\r\n  const { heroes, heroesLoadingStatus, filters } = useSelector(\r\n    (state) => state\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const { request } = useHttp();\r\n\r\n  useEffect(() => {\r\n    dispatch(heroesFetching());\r\n    request(\"http://localhost:3001/heroes\")\r\n      .then((data) => {\r\n        dispatch(heroesFetched(data));\r\n      })\r\n      .catch(() => dispatch(heroesFetchingError()));\r\n  }, [dispatch, request]);\r\n\r\n  if (heroesLoadingStatus === \"loading\") {\r\n    return <Spinner />;\r\n  } else if (heroesLoadingStatus === \"error\") {\r\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\r\n  }\r\n\r\n  const renderHeroesList = (arr) => {\r\n    if (arr.length === 0) {\r\n      return <h5 className=\"text-center mt-5\">Героев пока нет</h5>;\r\n    }\r\n\r\n    return arr.map(({ id, ...props }) => {\r\n      return <HeroesListItem key={id} id={id} heroes={heroes} {...props} />;\r\n    });\r\n  };\r\n\r\n  let elements;\r\n\r\n  if (filters.type === \"All\") {\r\n    elements = renderHeroesList(heroes);\r\n  } else {\r\n    elements = renderHeroesList(filters[\"arr\"]);\r\n  }\r\n\r\n  return <ul>{elements}</ul>;\r\n};\r\n\r\nexport default HeroesList;\r\n","// Задача для этого компонента:\r\n// Реализовать создание нового героя с введенными данными. Он должен попадать\r\n// в общее состояние и отображаться в списке + фильтроваться\r\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\r\n// Усложненная задача:\r\n// Персонаж создается и в файле json при помощи метода POST\r\n// Дополнительно:\r\n// Элементы <option></option> желательно сформировать на базе\r\n// данных из фильтров\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { add } from \"../../actions\";\r\nconst HeroesAddForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { request } = useHttp();\r\n  const [filter, setFilter] = useState([]);\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    text: \"\",\r\n    element: \"\",\r\n  });\r\n  useEffect(() => {\r\n    request(\"http://localhost:3001/filters/\").then((res) => {\r\n      setFilter(res);\r\n    });\r\n  }, [request]);\r\n  let filt = filter.map((filter, index) => {\r\n    return Object.entries(filter).map(([key, value]) => (\r\n      <option key={key} value={key}>\r\n        {value}\r\n      </option>\r\n    ));\r\n  });\r\n  return (\r\n    <form className=\"border p-4 shadow-lg rounded\">\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\r\n          Имя нового героя\r\n        </label>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"form-control\"\r\n          id=\"name\"\r\n          placeholder=\"Как меня зовут?\"\r\n          value={user[\"name\"]}\r\n          onChange={(e) => {\r\n            setUser((prev) => ({\r\n              ...prev,\r\n              name: e.target.value,\r\n            }));\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\r\n          Описание\r\n        </label>\r\n        <textarea\r\n          required\r\n          name=\"text\"\r\n          className=\"form-control\"\r\n          id=\"text\"\r\n          value={user[\"text\"]}\r\n          placeholder=\"Что я умею?\"\r\n          onChange={(e) => {\r\n            setUser((prev) => ({ ...prev, text: e.target.value }));\r\n            console.log(user);\r\n          }}\r\n          style={{ height: \"130px\" }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"element\" className=\"form-label\">\r\n          Выбрать элемент героя\r\n        </label>\r\n        <select\r\n          value={user.element}\r\n          required\r\n          className=\"form-select\"\r\n          id=\"element\"\r\n          name=\"element\"\r\n          onChange={(e) => {\r\n            setUser((prev) => ({ ...prev, element: e.target.value }));\r\n          }}\r\n        >\r\n          <option>Я владею элементом...</option>\r\n          {filt}\r\n        </select>\r\n      </div>\r\n\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          request(\r\n            \"http://localhost:3001/heroes/\",\r\n            \"POST\",\r\n            JSON.stringify(user)\r\n          );\r\n          dispatch(add(user));\r\n          console.log(user);\r\n        }}\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n      >\r\n        Создать\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default HeroesAddForm;\r\n","// Задача для этого компонента:\r\n// Фильтры должны формироваться на основании загруженных данных\r\n// Фильтры должны отображать только нужных героев при выборе\r\n// Активный фильтр имеет класс active\r\n// Изменять json-файл для удобства МОЖНО!\r\n// Представьте, что вы попросили бэкенд-разработчика об этом\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { heroesSort } from \"../../actions\";\r\nimport { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst HeroesFilters = () => {\r\n  const dispatch = useDispatch();\r\n  const [activeButton, setActiveButton] = useState(\"btn-outline-dark\");\r\n  const handleButtonClick = (buttonId) => {\r\n    setActiveButton(buttonId);\r\n  };\r\n  return (\r\n    <div className=\"card shadow-lg mt-4\">\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            // className=\"btn btn-outline-dark active\"\r\n            className={classNames(\"btn btn-outline-dark\", {\r\n              active: activeButton === \"btn-outline-dark\",\r\n            })}\r\n            onClick={() => {\r\n              dispatch(heroesSort(\"All\"));\r\n              handleButtonClick(() => {\r\n                handleButtonClick(\"btn-outline-dark\");\r\n              });\r\n            }}\r\n          >\r\n            Все\r\n          </button>\r\n          <button\r\n            // className=\"btn btn-danger\"\r\n            className={classNames(\"btn btn-danger\", {\r\n              active: activeButton === \"btn-danger\",\r\n            })}\r\n            onClick={() => {\r\n              handleButtonClick(() => {\r\n                handleButtonClick(\"btn-danger\");\r\n              });\r\n              dispatch(heroesSort(\"fire\"));\r\n            }}\r\n          >\r\n            Огонь\r\n          </button>\r\n          <button\r\n            // className=\"btn btn-primary\"\r\n            className={classNames(\"btn btn-primary\", {\r\n              active: activeButton === \"btn-primary\",\r\n            })}\r\n            onClick={() => {\r\n              handleButtonClick(() => {\r\n                handleButtonClick(\"btn-primary\");\r\n              });\r\n              dispatch(heroesSort(\"water\"));\r\n            }}\r\n          >\r\n            Вода\r\n          </button>\r\n          <button\r\n            // className=\"btn btn-success\"\r\n            className={classNames(\"btn btn-success\", {\r\n              active: activeButton === \"btn-success\",\r\n            })}\r\n            onClick={() => {\r\n              handleButtonClick(() => {\r\n                handleButtonClick(\"btn-success\");\r\n              });\r\n              dispatch(heroesSort(\"wind\"));\r\n            }}\r\n          >\r\n            Ветер\r\n          </button>\r\n          <button\r\n            // className=\"btn btn-secondary\"\r\n            className={classNames(\"btn btn-secondary\", {\r\n              active: activeButton === \"btn-secondary\",\r\n            })}\r\n            onClick={() => {\r\n              handleButtonClick(() => {\r\n                handleButtonClick(\"btn-secondary\");\r\n              });\r\n              dispatch(heroesSort(\"earth\"));\r\n            }}\r\n          >\r\n            Земля\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroesFilters;\r\n","import HeroesList from '../heroesList/HeroesList';\r\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\r\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n    \r\n    return (\r\n        <main className=\"app\">\r\n            <div className=\"content\">\r\n                <HeroesList/>\r\n                <div className=\"content__interactive\">\r\n                    <HeroesAddForm/>\r\n                    <HeroesFilters/>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;","import { v4 as uuidv4 } from \"uuid\";\r\nconst initialState = {\r\n  heroes: [],\r\n  heroesLoadingStatus: \"idle\",\r\n\r\n  filters: { type: \"All\", arr: [] },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"HEROES_FETCHING\":\r\n      return {\r\n        ...state,\r\n        heroesLoadingStatus: \"loading\",\r\n      };\r\n    case \"HEROES_FETCHED\":\r\n      return {\r\n        ...state,\r\n        heroes: action.payload,\r\n        heroesLoadingStatus: \"idle\",\r\n      };\r\n    case \"HEROES_SORT\": {\r\n      let sort = state.heroes.filter((hero) => hero.element === action.payload);\r\n\r\n      if (action.payload !== \"All\") {\r\n        if (sort.length === 0) {\r\n          return {\r\n            ...state,\r\n\r\n            filters: { arr: [], type: action.payload },\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n\r\n            filters: { arr: sort, type: action.payload },\r\n          };\r\n        }\r\n      } else {\r\n        console.log(\"попали\");\r\n        let heroe = state.heroes;\r\n        return {\r\n          ...state,\r\n          filters: { arr: heroe, type: \"All\" },\r\n        };\r\n      }\r\n    }\r\n    case \"HEROES_FETCHING_ERROR\":\r\n      return {\r\n        ...state,\r\n        heroesLoadingStatus: \"error\",\r\n      };\r\n    case \"HEROES_CLOSE\": {\r\n      let res = state.heroes.filter((hero) => hero.id !== action.payload);\r\n      return {\r\n        ...state,\r\n        heroes: res,\r\n      };\r\n    }\r\n    case \"HEROES_ADD\": {\r\n      action.payload.id = uuidv4();\r\n      state.heroes.push(action.payload);\r\n      return {\r\n        ...state,\r\n        // heroes: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/app/App';\r\nimport store from './store';\r\n\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}